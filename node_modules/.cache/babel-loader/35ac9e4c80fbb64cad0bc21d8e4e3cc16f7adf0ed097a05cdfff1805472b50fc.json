{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rerlich\\\\Desktop\\\\Projects\\\\Training\\\\React\\\\react-crud-todo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport TaskCreate from \"./components/TaskCreate.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // important, we need the ...tasks to keep the\n  // previous tasks, because we are working with objetcs\n  // and not with arrays\n\n  const createTask = task => {\n    const updatedTasks = [...tasks, {\n      id: Math.round(Math.random() * 1000),\n      title: task,\n      //description: description,\n      completed: false\n    }];\n    setTasks(updatedTasks);\n    console.log(tasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a task!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskCreate, {\n      onCreate: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), tasks.length > 1 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        classname: \"text-notask\",\n        children: \"No tasks, add a new one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","TaskCreate","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","createTask","task","updatedTasks","id","Math","round","random","title","completed","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","length","map","description","classname","_c","$RefreshReg$"],"sources":["C:/Users/rerlich/Desktop/Projects/Training/React/react-crud-todo/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport TaskCreate from \"./components/TaskCreate.js\"\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n\n  // important, we need the ...tasks to keep the\n  // previous tasks, because we are working with objetcs\n  // and not with arrays\n\n  const createTask = (task) => {\n    const updatedTasks = [\n      ...tasks,\n      {id: Math.round(Math.random() * 1000),\n        title: task,\n        //description: description,\n        completed: false}\n    ];\n    setTasks(updatedTasks);\n    console.log(tasks);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>Add a task!</h1>\n      </div>\n     <TaskCreate onCreate={createTask}/>\n     <div>\n      <h2>Tasks</h2>\n        {tasks.length > 1 ? tasks.map((task) => (\n          <div key={task.id}>\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n            <p>{task.completed}</p>\n            </div>\n        )) : <p classname=\"text-notask\">No tasks, add a new one!</p> }\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAGtC;EACA;EACA;;EAEA,MAAMQ,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,YAAY,GAAG,CACnB,GAAGJ,KAAK,EACR;MAACK,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;MACnCC,KAAK,EAAEN,IAAI;MACX;MACAO,SAAS,EAAE;IAAK,CAAC,CACpB;IACDT,QAAQ,CAACG,YAAY,CAAC;IACtBO,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBjB,OAAA;QAAAiB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACPrB,OAAA,CAACF,UAAU;MAACwB,QAAQ,EAAEjB;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnCrB,OAAA;MAAAiB,QAAA,gBACCjB,OAAA;QAAAiB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACXlB,KAAK,CAACoB,MAAM,GAAG,CAAC,GAAGpB,KAAK,CAACqB,GAAG,CAAElB,IAAI,iBACjCN,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAKX,IAAI,CAACM;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBrB,OAAA;UAAAiB,QAAA,EAAIX,IAAI,CAACmB;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBrB,OAAA;UAAAiB,QAAA,EAAIX,IAAI,CAACO;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHff,IAAI,CAACE,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR,CAAC,gBAAGrB,OAAA;QAAG0B,SAAS,EAAC,aAAa;QAAAT,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CAtCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}