{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rerlich\\\\Desktop\\\\Projects\\\\Training\\\\React\\\\react-crud-todo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport TaskCreate from \"./components/TaskCreate.js\";\nimport TaskList from \"./components/TaskList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // important, we need the ...tasks to keep the\n  // previous tasks, because we are working with objetcs\n  // and not with arrays\n\n  const createTask = task => {\n    const updatedTasks = [...tasks, {\n      id: Math.round(Math.random() * 1000),\n      title: task,\n      //description: description,\n      completed: false\n    }];\n    setTasks(updatedTasks);\n  };\n  const deleteTaskByID = id => {\n    const updatedTasks = tasks.filter(task => {\n      return task.id !== id;\n    });\n    setTasks(updatedTasks);\n  };\n  const editBookById = (id, newTitle) => {\n    const editedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          title: newTitle\n        };\n      }\n      return task;\n    });\n    setTasks(editedTasks);\n  };\n  const completeTaskByID = (id, newCompleted) => {\n    const completedTasks = tasks.map(task => {\n      if (task.id === id) {\n        console.log(newCompleted);\n        return {\n          ...task,\n          completed: newCompleted\n        };\n      }\n      return task;\n    });\n    setTasks(completedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"nav-header__text\",\n        children: \"Add a task!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskCreate, {\n      onCreate: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"task-subtitle\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onDelete: deleteTaskByID,\n        onEdit: editBookById,\n        onComplete: completeTaskByID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","TaskCreate","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","createTask","task","updatedTasks","id","Math","round","random","title","completed","deleteTaskByID","filter","editBookById","newTitle","editedTasks","map","completeTaskByID","newCompleted","completedTasks","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","onDelete","onEdit","onComplete","_c","$RefreshReg$"],"sources":["C:/Users/rerlich/Desktop/Projects/Training/React/react-crud-todo/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport TaskCreate from \"./components/TaskCreate.js\";\nimport TaskList from \"./components/TaskList.js\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  // important, we need the ...tasks to keep the\n  // previous tasks, because we are working with objetcs\n  // and not with arrays\n\n  const createTask = (task) => {\n    const updatedTasks = [\n      ...tasks,\n      {\n        id: Math.round(Math.random() * 1000),\n        title: task,\n        //description: description,\n        completed: false,\n      },\n    ];\n    setTasks(updatedTasks);\n  };\n\n  const deleteTaskByID = (id) => {\n    const updatedTasks = tasks.filter((task) => {\n      return task.id !== id;\n    });\n\n    setTasks(updatedTasks);\n  };\n\n  const editBookById = (id, newTitle) => {\n    const editedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, title: newTitle };\n      }\n      return task;\n    });\n    setTasks(editedTasks);\n  };\n\n  const completeTaskByID = (id, newCompleted) => {\n    const completedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        console.log(newCompleted);\n        return { ...task, completed: newCompleted };\n      }\n      return task;\n    });\n    setTasks(completedTasks);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1 className=\"nav-header__text\">Add a task!</h1>\n      </div>\n      <TaskCreate onCreate={createTask} />\n      <div>\n        <h2 className=\"task-subtitle\">Tasks</h2>\n        <TaskList\n          tasks={tasks}\n          onDelete={deleteTaskByID}\n          onEdit={editBookById}\n          onComplete={completeTaskByID}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}