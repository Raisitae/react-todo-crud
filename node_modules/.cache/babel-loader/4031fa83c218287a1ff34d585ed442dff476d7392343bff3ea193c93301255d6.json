{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rerlich\\\\Desktop\\\\Projects\\\\Training\\\\React\\\\react-crud-todo\\\\src\\\\components\\\\TaskList.js\";\nimport React, { useState } from \"react\";\nimport TaskShow from \"./TaskShow.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks\n}) {\n  const rederedTasks = tasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(TaskShow, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.length > 1 ? /*#__PURE__*/_jsxDEV(TaskShow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-notask\",\n      children: \"No tasks, add a new one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskShow","jsxDEV","_jsxDEV","TaskList","tasks","rederedTasks","map","task","id","fileName","_jsxFileName","lineNumber","columnNumber","children","length","className","_c","$RefreshReg$"],"sources":["C:/Users/rerlich/Desktop/Projects/Training/React/react-crud-todo/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TaskShow from \"./TaskShow.js\";\r\n\r\nfunction TaskList({ tasks }) {\r\n  \r\n    const rederedTasks = tasks.map((task) => {\r\n        return <TaskShow key={task.id} task={task} />;\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      {tasks.length > 1 ? \r\n      (<TaskShow/>)\r\n       : (\r\n        <p className=\"text-notask\">No tasks, add a new one!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,QAAQA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAEzB,MAAMC,YAAY,GAAGD,KAAK,CAACE,GAAG,CAAEC,IAAI,IAAK;IACrC,oBAAOL,OAAA,CAACF,QAAQ;MAAeO,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EACjD,CAAC,CAAC;EAEJ,oBACEV,OAAA;IAAAW,QAAA,EACGT,KAAK,CAACU,MAAM,GAAG,CAAC,gBAChBZ,OAAA,CAACF,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAEVV,OAAA;MAAGa,SAAS,EAAC,aAAa;MAAAF,QAAA,EAAC;IAAwB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACvD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACI,EAAA,GAfQb,QAAQ;AAiBjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}